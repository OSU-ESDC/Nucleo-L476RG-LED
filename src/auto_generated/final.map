
Discarded input sections

 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o
 .group         0x0000000000000000        0xc main.o

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x0000000020000000 0x0000000000018000 xrw
RAM2             0x0000000010000000 0x0000000000008000 xrw
FLASH            0x0000000008000000 0x0000000000100000 xr
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD main.o
LOAD startup_stm32l476rgtx.o
                0x0000000020018000                _estack = (ORIGIN (RAM) + LENGTH (RAM))
                0x0000000000000200                _Min_Heap_Size = 0x200
                0x0000000000000400                _Min_Stack_Size = 0x400

.isr_vector     0x0000000020000000      0x188
                0x0000000020000000                . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x0000000020000000      0x188 startup_stm32l476rgtx.o
                0x0000000020000000                g_pfnVectors
                0x0000000020000188                . = ALIGN (0x4)

.text           0x0000000008000000       0xe0
                0x0000000008000000                . = ALIGN (0x4)
 *(.text)
 .text          0x0000000008000000       0x80 main.o
                0x0000000008000000                led_on
                0x000000000800004c                main
 .text          0x0000000008000080       0x14 startup_stm32l476rgtx.o
 *(.text*)
 .text.Reset_Handler
                0x0000000008000094       0x48 startup_stm32l476rgtx.o
                0x0000000008000094                Reset_Handler
 .text.Default_Handler
                0x00000000080000dc        0x2 startup_stm32l476rgtx.o
                0x00000000080000dc                RTC_Alarm_IRQHandler
                0x00000000080000dc                EXTI2_IRQHandler
                0x00000000080000dc                TIM8_TRG_COM_IRQHandler
                0x00000000080000dc                TIM8_CC_IRQHandler
                0x00000000080000dc                DebugMon_Handler
                0x00000000080000dc                TIM1_CC_IRQHandler
                0x00000000080000dc                TSC_IRQHandler
                0x00000000080000dc                HardFault_Handler
                0x00000000080000dc                SysTick_Handler
                0x00000000080000dc                TAMP_STAMP_IRQHandler
                0x00000000080000dc                PendSV_Handler
                0x00000000080000dc                NMI_Handler
                0x00000000080000dc                EXTI3_IRQHandler
                0x00000000080000dc                LPTIM2_IRQHandler
                0x00000000080000dc                DFSDM1_FLT1_IRQHandler
                0x00000000080000dc                I2C3_ER_IRQHandler
                0x00000000080000dc                DFSDM1_FLT2_IRQHandler
                0x00000000080000dc                EXTI0_IRQHandler
                0x00000000080000dc                I2C2_EV_IRQHandler
                0x00000000080000dc                CAN1_RX0_IRQHandler
                0x00000000080000dc                FPU_IRQHandler
                0x00000000080000dc                TIM1_UP_TIM16_IRQHandler
                0x00000000080000dc                UsageFault_Handler
                0x00000000080000dc                ADC1_2_IRQHandler
                0x00000000080000dc                SPI1_IRQHandler
                0x00000000080000dc                TIM6_DAC_IRQHandler
                0x00000000080000dc                TIM8_UP_IRQHandler
                0x00000000080000dc                DMA2_Channel2_IRQHandler
                0x00000000080000dc                DMA1_Channel4_IRQHandler
                0x00000000080000dc                SAI2_IRQHandler
                0x00000000080000dc                DFSDM1_FLT3_IRQHandler
                0x00000000080000dc                USART3_IRQHandler
                0x00000000080000dc                DMA1_Channel7_IRQHandler
                0x00000000080000dc                CAN1_RX1_IRQHandler
                0x00000000080000dc                LCD_IRQHandler
                0x00000000080000dc                UART5_IRQHandler
                0x00000000080000dc                ADC3_IRQHandler
                0x00000000080000dc                TIM4_IRQHandler
                0x00000000080000dc                DMA2_Channel1_IRQHandler
                0x00000000080000dc                QUADSPI_IRQHandler
                0x00000000080000dc                I2C1_EV_IRQHandler
                0x00000000080000dc                DMA1_Channel6_IRQHandler
                0x00000000080000dc                UART4_IRQHandler
                0x00000000080000dc                DMA2_Channel4_IRQHandler
                0x00000000080000dc                TIM3_IRQHandler
                0x00000000080000dc                RCC_IRQHandler
                0x00000000080000dc                DMA1_Channel1_IRQHandler
                0x00000000080000dc                Default_Handler
                0x00000000080000dc                DMA2_Channel7_IRQHandler
                0x00000000080000dc                EXTI15_10_IRQHandler
                0x00000000080000dc                TIM7_IRQHandler
                0x00000000080000dc                SDMMC1_IRQHandler
                0x00000000080000dc                TIM5_IRQHandler
                0x00000000080000dc                I2C3_EV_IRQHandler
                0x00000000080000dc                EXTI9_5_IRQHandler
                0x00000000080000dc                RTC_WKUP_IRQHandler
                0x00000000080000dc                PVD_PVM_IRQHandler
                0x00000000080000dc                SPI2_IRQHandler
                0x00000000080000dc                MemManage_Handler
                0x00000000080000dc                CAN1_TX_IRQHandler
                0x00000000080000dc                SVC_Handler
                0x00000000080000dc                DMA2_Channel5_IRQHandler
                0x00000000080000dc                DMA1_Channel5_IRQHandler
                0x00000000080000dc                EXTI4_IRQHandler
                0x00000000080000dc                RNG_IRQHandler
                0x00000000080000dc                TIM1_TRG_COM_TIM17_IRQHandler
                0x00000000080000dc                DMA1_Channel3_IRQHandler
                0x00000000080000dc                COMP_IRQHandler
                0x00000000080000dc                WWDG_IRQHandler
                0x00000000080000dc                LPUART1_IRQHandler
                0x00000000080000dc                DMA2_Channel6_IRQHandler
                0x00000000080000dc                TIM2_IRQHandler
                0x00000000080000dc                EXTI1_IRQHandler
                0x00000000080000dc                USART2_IRQHandler
                0x00000000080000dc                DFSDM1_FLT0_IRQHandler
                0x00000000080000dc                I2C2_ER_IRQHandler
                0x00000000080000dc                DMA1_Channel2_IRQHandler
                0x00000000080000dc                TIM8_BRK_IRQHandler
                0x00000000080000dc                CAN1_SCE_IRQHandler
                0x00000000080000dc                FLASH_IRQHandler
                0x00000000080000dc                BusFault_Handler
                0x00000000080000dc                USART1_IRQHandler
                0x00000000080000dc                OTG_FS_IRQHandler
                0x00000000080000dc                SPI3_IRQHandler
                0x00000000080000dc                I2C1_ER_IRQHandler
                0x00000000080000dc                FMC_IRQHandler
                0x00000000080000dc                SWPMI1_IRQHandler
                0x00000000080000dc                LPTIM1_IRQHandler
                0x00000000080000dc                SAI1_IRQHandler
                0x00000000080000dc                DMA2_Channel3_IRQHandler
                0x00000000080000dc                TIM1_BRK_TIM15_IRQHandler
 *(.glue_7)
 .glue_7        0x00000000080000de        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x00000000080000de        0x0 linker stubs
 *(.eh_frame)
 *(.RamFunc)
 *(.RamFunc*)
 *(.init)
 *(.fini)
                0x00000000080000e0                . = ALIGN (0x4)
 *fill*         0x00000000080000de        0x2 
                0x00000000080000e0                _etext = .

.vfp11_veneer   0x00000000080000e0        0x0
 .vfp11_veneer  0x00000000080000e0        0x0 linker stubs

.v4_bx          0x00000000080000e0        0x0
 .v4_bx         0x00000000080000e0        0x0 linker stubs

.iplt           0x00000000080000e0        0x0
 .iplt          0x00000000080000e0        0x0 main.o

.rel.dyn        0x00000000080000e0        0x0
 .rel.iplt      0x00000000080000e0        0x0 main.o

.rodata         0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
 *(.rodata)
 *(.rodata*)
                0x0000000020000188                . = ALIGN (0x4)

.ARM.extab      0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0000000020000188                . = ALIGN (0x4)

.ARM            0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
                0x0000000020000188                __exidx_start = .
 *(.ARM.exidx*)
                0x0000000020000188                __exidx_end = .
                0x0000000020000188                . = ALIGN (0x4)

.preinit_array  0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array*)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000020000188                . = ALIGN (0x4)

.init_array     0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array*)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000020000188                . = ALIGN (0x4)

.fini_array     0x0000000020000188        0x0
                0x0000000020000188                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array*)
                [!provide]                        PROVIDE (__fini_array_end = .)
                0x0000000020000188                . = ALIGN (0x4)
                0x00000000080000e0                _sidata = LOADADDR (.data)

.data           0x0000000020000188        0x0 load address 0x00000000080000e0
                0x0000000020000188                . = ALIGN (0x4)
                0x0000000020000188                _sdata = .
 *(.data)
 .data          0x0000000020000188        0x0 main.o
 .data          0x0000000020000188        0x0 startup_stm32l476rgtx.o
 *(.data*)
                0x0000000020000188                . = ALIGN (0x4)
                0x0000000020000188                _edata = .

.igot.plt       0x0000000020000188        0x0 load address 0x00000000080000e0
 .igot.plt      0x0000000020000188        0x0 main.o
                0x0000000020000188                . = ALIGN (0x4)

.bss            0x0000000020000188        0x0 load address 0x00000000080000e0
                0x0000000020000188                _sbss = .
                0x0000000020000188                __bss_start__ = _sbss
 *(.bss)
 .bss           0x0000000020000188        0x0 main.o
 .bss           0x0000000020000188        0x0 startup_stm32l476rgtx.o
 *(.bss*)
 *(COMMON)
                0x0000000020000188                . = ALIGN (0x4)
                0x0000000020000188                _ebss = .
                0x0000000020000188                __bss_end__ = _ebss

._user_heap_stack
                0x0000000020000188      0x600 load address 0x00000000080000e0
                0x0000000020000188                . = ALIGN (0x8)
                [!provide]                        PROVIDE (end = .)
                [!provide]                        PROVIDE (_end = .)
                0x0000000020000388                . = (. + _Min_Heap_Size)
 *fill*         0x0000000020000188      0x200 
                0x0000000020000788                . = (. + _Min_Stack_Size)
 *fill*         0x0000000020000388      0x400 
                0x0000000020000788                . = ALIGN (0x8)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.ARM.attributes
                0x0000000000000000       0x2c
 *(.ARM.attributes)
 .ARM.attributes
                0x0000000000000000       0x2e main.o
 .ARM.attributes
                0x000000000000002e       0x21 startup_stm32l476rgtx.o
OUTPUT(final.elf elf32-littlearm)
LOAD linker stubs
LOAD /opt/gcc-arm/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libc.a
LOAD /opt/gcc-arm/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/libm.a
LOAD /opt/gcc-arm/bin/../lib/gcc/arm-none-eabi/10.3.1/libgcc.a

.debug_info     0x0000000000000000      0x102
 .debug_info    0x0000000000000000       0xe0 main.o
 .debug_info    0x00000000000000e0       0x22 startup_stm32l476rgtx.o

.debug_abbrev   0x0000000000000000       0xb8
 .debug_abbrev  0x0000000000000000       0xa6 main.o
 .debug_abbrev  0x00000000000000a6       0x12 startup_stm32l476rgtx.o

.debug_aranges  0x0000000000000000       0x48
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x28 startup_stm32l476rgtx.o

.debug_macro    0x0000000000000000      0xf5e
 .debug_macro   0x0000000000000000       0xb7 main.o
 .debug_macro   0x00000000000000b7      0xa5a main.o
 .debug_macro   0x0000000000000b11       0x22 main.o
 .debug_macro   0x0000000000000b33       0x8e main.o
 .debug_macro   0x0000000000000bc1       0x51 main.o
 .debug_macro   0x0000000000000c12      0x103 main.o
 .debug_macro   0x0000000000000d15       0x6a main.o
 .debug_macro   0x0000000000000d7f      0x1df main.o

.debug_line     0x0000000000000000      0x1f0
 .debug_line    0x0000000000000000      0x17a main.o
 .debug_line    0x000000000000017a       0x76 startup_stm32l476rgtx.o

.debug_str      0x0000000000000000     0x3c90
 .debug_str     0x0000000000000000     0x3c6a main.o
                                       0x3dce (size before relaxing)
 .debug_str     0x0000000000003c6a       0x26 startup_stm32l476rgtx.o
                                         0x54 (size before relaxing)

.comment        0x0000000000000000       0x49
 .comment       0x0000000000000000       0x49 main.o
                                         0x4a (size before relaxing)

.debug_frame    0x0000000000000000       0x50
 .debug_frame   0x0000000000000000       0x50 main.o

.debug_ranges   0x0000000000000000       0x20
 .debug_ranges  0x0000000000000000       0x20 startup_stm32l476rgtx.o
